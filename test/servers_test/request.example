refer to ConigData dir for detailed configs of each service

request url "host:port/methodCore"
and the post method body is defined as below


##doc searcher service
{
    "Title": "what is classification?",
    "Body": "I need to do know the definition of classification in machine learning.",
    "Tags": ["<deep-learning>", "regression"],
    "size": 1000
}

##know alpha service
{"question":{
    "Title": "what is tensorflow?",
    "Body": "I need to do some regression using deeep learning.",
    "Tags": ["<deep-learning>", "regression"],
    "size": 10
},
"posts":[
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>After building tensorflow, it generates some folders starting with bazel-*. And those folders are only soft links to other folders under /private/var/tmp on my Mac.</p>\n\n<p>Now I want to change some code inside Eigen CXX11 library, and I only find them under bazel-tensorflow/external. My guess is these source files are generated at runtime. So where I can find the original source of Eigen and modify them?</p>\n",
        "CommentCount": 4,
        "CreationDate": "2017-06-09T08:24:58.503",
        "FavoriteCount": 0,
        "Id": 44452849,
        "LastActivityDate": "2017-06-09T08:53:00.583",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 8035809,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "tensorflow, eigen, eigen3",
        "Title": "what is bazel-tensorflow inside tensorflow source folder?",
        "ViewCount": 89,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 44857127,
        "AnswerCount": 1,
        "Body": "<p><a href=\"https://i.stack.imgur.com/YuwKy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/YuwKy.png\" alt=\"String Input Producer contains a fraction of 32 full.\"></a></p>\n\n<p>As can be seen in this picture, my graph has a: \"fraction_of_32_full\" output attached to it. I haven't done this explicitly, and nowhere in my code have I set any limits of a size of 32.</p>\n\n<p>The only data I am explicitly adding to my summary is the cost of each batch, yet when I view my TensorBoard visualisation, I see this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/R3pee.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/R3pee.png\" alt=\"Tensorboard Visualisation\"></a></p>\n\n<p>As you can see, it contains three things. The cost, which I asked for, and two other variables which I havent asked for. The fraction of 25,000 full, and the fraction of 32 full.</p>\n\n<p><strong>My Questions Are:</strong></p>\n\n<ol>\n<li><strong>What are these?</strong></li>\n<li><strong>Why are they added to my summaries without me explicitly asking?</strong></li>\n</ol>\n",
        "CommentCount": 0,
        "CreationDate": "2017-07-01T03:41:44.817",
        "FavoriteCount": 3,
        "Id": 44857126,
        "LastActivityDate": "2017-07-01T03:41:44.817",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 5834938,
        "PostTypeId": 1,
        "Score": 4,
        "Tags": "tensorflow, queue",
        "Title": "What is fraction_of_32_full in TensorFlow",
        "ViewCount": 719,
        "answers": [
            {
                "Body": "<p>I can actually answer my own question here. I did some digging, and found the answers.</p>\n\n<ol>\n<li><strong>What are these?</strong></li>\n</ol>\n\n<p>These are measures of how full your queues are. I have two queues, a string input producer queue which reads my files, and a batch queue which batches my records. Both of the records are in the format: \"fraction of x full\" where x is the capacity of the queue.</p>\n\n<p>The reason the string input producer is fraction of 32, is because if you look at the documentation <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/string_input_producer\" rel=\"noreferrer\">here</a>, you'll see the default capacity is 32.</p>\n\n<ol start=\"2\">\n<li><strong>Why are these added to my summaries without me explicitly asking.</strong></li>\n</ol>\n\n<p>This was a little trickier. If you look at the source code for the input string producer <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/python/training/input.py\" rel=\"noreferrer\">here</a>, you'll see that although the input_string_producer <strong>doesn't</strong> explicitly ask for a summary name, it returns an input_producer, which has a default summary name of: summary_name=\"fraction_of_%d_full\" % capacity. Check line 235 for this. Something similar happens here for the batch queue.</p>\n\n<p>The reason these are being recorded without explicitly asking, is because they were created without explicitly asking, and then the line of code:</p>\n\n<pre><code>merged_summaries = tf.summary.merge_all()\n</code></pre>\n\n<p>merged all these summaries together, so when I called:</p>\n\n<pre><code>sess.run([optimizer, cost, merged_summaries], ..... )\nwriter.add_summary(s, batch)\n</code></pre>\n\n<p>I was actually asking for these to be recorded too.</p>\n\n<p>I hope this answer helped some people.</p>\n",
                "CommentCount": 2,
                "CreationDate": "2017-07-01T03:41:44.817",
                "Id": 44857127,
                "LastActivityDate": "2017-07-01T03:41:44.817",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5834938,
                "ParentId": 44857126,
                "PostTypeId": 2,
                "Score": 8
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 47672101,
        "AnswerCount": 3,
        "Body": "<pre><code>self.center_words = tf.placeholder(tf.int32, shape=[self.batch_size], name='op testing')\nprint(\"Extracting the op\",self.center_words.op)\n</code></pre>\n\n<p>In above I have created a tf placeholder named \"op testing\". And when I print that <strong>self.center_words.op</strong>it prints out kind of a structure like this </p>\n\n<pre><code>op: \"Placeholder\"\nattr {\n  key: \"dtype\"\n  value {\n    type: DT_INT32\n  }\n}\nattr {\n  key: \"shape\"\n  value {\n    shape {\n      dim {\n        size: 128\n      }\n    }\n  }\n}\n</code></pre>\n\n<p>This works for any tensorflow variable ,function output etc. What is this <strong><em>.op</em></strong>?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2017-04-08T05:00:00.367",
        "FavoriteCount": 6,
        "Id": 43290373,
        "LastActivityDate": "2017-12-06T10:31:57.307",
        "LastEditDate": "2017-04-15T22:27:09.403",
        "LastEditorUserId": 2956066,
        "OwnerUserId": 5915270,
        "PostTypeId": 1,
        "Score": 4,
        "Tags": "python, tensorflow, neural-network, deep-learning",
        "Title": "What is tensorflow \"op\" does?",
        "ViewCount": 5218,
        "answers": [
            {
                "Body": "<p>Short answer.</p>\n\n<p><a href=\"https://www.tensorflow.org/versions/r0.10/get_started/basic_usage\" rel=\"noreferrer\">Ops</a>  are say the core of <code>tensorflow</code>.</p>\n\n<blockquote>\n  <p>TensorFlow is a programming system in which you represent computations\n  as graphs. Nodes in the graph are called ops (short for operations).\n  An op takes zero or more Tensors, performs some computation, and\n  produces zero or more Tensors.</p>\n</blockquote>\n\n<p><code>self.center_words.op</code> in your example prints out the features of  <code>self.center_words</code> in that json-like format</p>\n",
                "CommentCount": 1,
                "CreationDate": "2017-04-08T09:15:51.087",
                "Id": 43292256,
                "LastActivityDate": "2017-04-08T09:15:51.087",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 1115377,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 6
            },
            {
                "Body": "<p>Simply put, it prints the property of the particular <em>tensor object</em>. That is, it gives out details about </p>\n\n<ul>\n<li>which operation is responsible for the generation of the tensor </li>\n<li>what is its <code>return type</code>  </li>\n<li>what is its <code>dimension</code></li>\n</ul>\n\n<p>and all possible information about the tensor object in question.</p>\n\n<p>Minimal Example:</p>\n\n<pre><code>In [74]: with tf.Session() as sess:\n    ...:     zer = tf.zeros(shape=(32, 32))\n    ...:     print(zer.op)\n    ...:     \nname: \"zeros_11\"\nop: \"Const\"\nattr {\n  key: \"dtype\"\n  value {\n    type: DT_FLOAT\n  }\n}\nattr {\n  key: \"value\"\n  value {\n    tensor {\n      dtype: DT_FLOAT\n      tensor_shape {\n        dim {\n          size: 32\n        }\n        dim {\n          size: 32\n        }\n      }\n      float_val: 0.0\n    }\n  }\n}\n</code></pre>\n\n<hr>\n\n<p>P.S.: Ignore the number(<code>_11</code>) in (<code>zeros_11</code>)  (that is in the value of the key <code>name</code>). It is just a counter to track the runs. It keeps incrementing on every run within a session.</p>\n\n<hr>\n\n<p>Source Implementation:</p>\n\n<p>Code: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/ops.py#L273\" rel=\"nofollow noreferrer\">tf.Tensor.op</a><br>\nDocs: <a href=\"https://www.tensorflow.org/api_docs/python/tf/Tensor#op\" rel=\"nofollow noreferrer\">tf.Tensor.op</a></p>\n",
                "CommentCount": 3,
                "CreationDate": "2017-04-08T15:51:45.487",
                "Id": 43296161,
                "LastActivityDate": "2017-04-15T23:12:38.967",
                "LastEditDate": "2017-04-15T23:12:38.967",
                "LastEditorUserId": 2956066,
                "OwnerUserId": 2956066,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 3
            },
            {
                "Body": "<p><em>TensorFlow Operations</em>, also known as <em>Ops</em>, are nodes that\nperform computations on or with Tensor objects. After computation, they return zero or\nmore tensors, which can be used by other Ops later in the graph. To create an Operation,\nyou call its constructor in Python, which takes in whatever Tensor parameters needed for\nits calculation, known as inputs, as well as any additional information needed to properly\ncreate the Op, known as <em>attributes</em>. The Python constructor returns a handle to the\nOperation’s output (zero or more Tensor objects), and it is this output which can be passed\non to other Operations or <em>Session.run</em></p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-12-06T10:31:57.307",
                "Id": 47672101,
                "LastActivityDate": "2017-12-06T10:31:57.307",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 9061184,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 4
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 50990532,
        "AnswerCount": 1,
        "Body": "<p>What is the purpose of parsing flags in TensorFlow? What is tf.flags.FLAGS?\n& what does this code statement do?</p>\n\n<pre><code>FLAGS = tf.flags.FLAGS\nFLAGS._parse_flags()\nprint(\"\\nParameters:\")\nfor attr, value in sorted(FLAGS.__flags.items()):\n    print(\"{}={}\".format(attr.upper(), value))\nprint(\"\")\n</code></pre>\n",
        "CommentCount": 0,
        "CreationDate": "2018-06-22T14:33:03.573",
        "FavoriteCount": 0,
        "Id": 50990239,
        "LastActivityDate": "2018-06-22T14:48:33.797",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 9978843,
        "PostTypeId": 1,
        "Score": 3,
        "Tags": "python, numpy, tensorflow, pycharm",
        "Title": "Python TensorFlow - what is tf.flags.FLAGS?",
        "ViewCount": 375,
        "answers": [
            {
                "Body": "<p>In Tensorflow the flags are basically run parameters for your model. Later in the code you will probably see a tf.app.run() which will utilize these flags. What this code does is grab all the currently existing flags, and print them all out in this format:</p>\n\n<pre><code>Parameters:\nlearning_rate=0.01\nmax_steps=2000\nhidden1=128\nhidden2=32\nbatch_size=100\n</code></pre>\n\n<p>These parameters are just examples that I found online, and will vary from model to model. Hope this helps.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2018-06-22T14:48:33.797",
                "Id": 50990532,
                "LastActivityDate": "2018-06-22T14:48:33.797",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5624170,
                "ParentId": 50990239,
                "PostTypeId": 2,
                "Score": 2
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 48535662,
        "AnswerCount": 1,
        "Body": "<p>In TensorFlow the first thing I learned to create a variable is</p>\n\n<pre><code>W = tf.Variable(tf.zeros((2,2)), name=\"weights\")\n</code></pre>\n\n<p>But I have a silly question as:</p>\n\n<p>When I name the variable as \"weights\", shouldn't W be its name as well? What's the difference between \"W\" and \"weights\" here?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2018-01-31T04:46:13.980",
        "FavoriteCount": 0,
        "Id": 48534656,
        "LastActivityDate": "2018-01-31T06:18:06.970",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 9292475,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "tensorflow",
        "Title": "What is TensorFlow Variable naming?",
        "ViewCount": 25,
        "answers": [
            {
                "Body": "<p><code>W</code> is a Python variable that contains the reference to the <code>tensorflow Variable</code>. When you are dealing with creating model (in Python) you need to use <code>W</code>.</p>\n\n<p>But, suppose you have a bug in your model. So, you query tensorflow for the model details. Tensorflow prints the output, but with default naming because it does not know what name did you gave to its object in Python, and increases the difficulty in debugging. So, passing <code>name</code> attribute explicitly assigns the specified name to the tensorflow object.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2018-01-31T06:18:06.970",
                "Id": 48535662,
                "LastActivityDate": "2018-01-31T06:18:06.970",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 7102925,
                "ParentId": 48534656,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>I am learning tensorflow and i found a code online in which they used get_variable() in it. What is this function?\nLike this line of code:</p>\n\n<pre><code>W1 = tf.get_variable(\"W1\", [25, 122], initializer = \n                    tf.contrib.layers.xavier_initializer())\n</code></pre>\n\n<p>And also what this initializer is doing in it?</p>\n",
        "CommentCount": 3,
        "CreationDate": "2018-04-16T20:31:40.680",
        "FavoriteCount": 0,
        "Id": 49865761,
        "LastActivityDate": "2018-04-17T07:52:49.820",
        "LastEditDate": "2018-04-17T07:52:49.820",
        "LastEditorUserId": 9355802,
        "OwnerUserId": 9355802,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "python, tensorflow, machine-learning, neural-network, deep-learning",
        "Title": "What is get_variable in tensorflow?",
        "ViewCount": 104,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 4,
        "Body": "<p>What is an epoch in TensorFlow and what is it used for?</p>\n\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/754048a0453a04a761e112ae5d99c149eb9910dd/tensorflow/contrib/learn/python/learn/datasets/mnist.py#L173\" rel=\"noreferrer\">https://github.com/tensorflow/tensorflow/blob/754048a0453a04a761e112ae5d99c149eb9910dd/tensorflow/contrib/learn/python/learn/datasets/mnist.py#L173</a></p>\n",
        "CommentCount": 0,
        "CreationDate": "2016-10-16T11:02:26.290",
        "FavoriteCount": 1,
        "Id": 40069524,
        "LastActivityDate": "2017-09-29T14:18:20.427",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 5016411,
        "PostTypeId": 1,
        "Score": 10,
        "Tags": "tensorflow",
        "Title": "What is an epoch in TensorFlow?",
        "ViewCount": 6744,
        "answers": [
            {
                "Body": "<p>An epoch, in Machine Learning, is the entire processing by the learning algorithm of the entire train-set.</p>\n\n<p>The MNIST train set is composed by 55000 samples.\nOnce the algorithm processed all those 55000 samples an epoch is passed.</p>\n",
                "CommentCount": 0,
                "CreationDate": "2016-10-16T11:17:46.800",
                "Id": 40069646,
                "LastActivityDate": "2016-10-16T11:17:46.800",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 2891324,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 18
            },
            {
                "Body": "<p>An epoch is a full iteration over samples. The number of epochs is how many times the algorithm is going to run. The number of epochs affects directly (or not) the result of the training step (with just a few epochs you can reach only a local minimum, but with more epochs, you can reach a global minimum or at least a better local minimum).</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-04-11T01:24:52.847",
                "Id": 43335283,
                "LastActivityDate": "2017-04-11T01:24:52.847",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 2768539,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 4
            },
            {
                "Body": "<p>An epoch is one training iteration, so in one iteration all samples are iterated once. When calling tensorflows train-function and define the value for the parameter epochs, you determine how many times your model should be trained on your sample data (usually at least some hundred times).</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-09-29T14:18:20.427",
                "Id": 46490784,
                "LastActivityDate": "2017-09-29T14:18:20.427",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 8695372,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 0
            },
            {
                "Body": "<p>Epoch is not something intrinsic to the TensorFlow framework. It has been used for a long time in the field of Machine Learning.</p>\n\n<p>One epoch is the time step that is incremented every time it has went through all the samples in the training set.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2017-04-11T00:14:54.580",
                "Id": 43334773,
                "LastActivityDate": "2017-04-11T00:14:54.580",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5888016,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>What does @@ mean in Tensorflow source code? For example, in this link\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.6/tensorflow/python/ops/array_ops.py#L19\" rel=\"nofollow noreferrer\">https://github.com/tensorflow/tensorflow/blob/r1.6/tensorflow/python/ops/array_ops.py#L19</a>  </p>\n\n<p>What follows the @@ symbols seems to be some function names. What is the purpose of including such section in the beginning of the source code? </p>\n\n<p>Besides, in this page, it says the </p>\n\n<blockquote>\n  <p>tf.placeholder_with_default</p>\n</blockquote>\n\n<p>is defined in </p>\n\n<blockquote>\n  <p>tensorflow/python/ops/gen_array_ops.py</p>\n</blockquote>\n\n<p>But I cannot find the respected python files in the github repository. Where can I find the source code for this function?<br>\n<a href=\"https://github.com/tensorflow/tensorflow/tree/r1.6/tensorflow/python/ops\" rel=\"nofollow noreferrer\">https://github.com/tensorflow/tensorflow/tree/r1.6/tensorflow/python/ops</a></p>\n",
        "CommentCount": 3,
        "CreationDate": "2018-03-07T11:49:19.053",
        "FavoriteCount": 0,
        "Id": 49151225,
        "LastActivityDate": "2018-03-07T11:49:19.053",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 7349742,
        "PostTypeId": 1,
        "Score": 1,
        "Tags": "python, tensorflow",
        "Title": "What does @@ means in the Tensorflow source code?",
        "ViewCount": 41,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 1,
        "Body": "<p>I have a question regarding the difference between <code>TensorFlow Serving</code> versus <code>TensorFlow service</code>. (Sorry that I'm not familiar with this at all.)</p>\n\n<p>I found TensorFlow serving's definition, which is \"TensorFlow Serving is a flexible, high-performance serving system for machine learning models, designed for production environments.\"(<a href=\"https://www.tensorflow.org/serving/\" rel=\"nofollow noreferrer\">https://www.tensorflow.org/serving/</a>)\nWhile I'm wondering what TensorFlow service is? Such as in this sentences:</p>\n\n<p>\"TensorFlow models can be deployed to production services like <strong>TensorFlow service</strong>, and mobile devices.\"</p>\n\n<p>And what are the production services?\nI guess the TensorFlow service refers to some service that helps manage TensorFlow, rather than TensorFlow Serving which is a system to deploy the TensorFlow model. Is that correct?\nI'm confused about what the TensorFlow service is, can you share some light on it?</p>\n\n<p>Thank you so much in advance!</p>\n",
        "CommentCount": 1,
        "CreationDate": "2017-12-05T08:40:57.457",
        "FavoriteCount": 0,
        "Id": 47649297,
        "LastActivityDate": "2017-12-27T07:03:01.540",
        "LastEditDate": "2017-12-05T13:00:30.053",
        "LastEditorUserId": 5166249,
        "OwnerUserId": 5166249,
        "PostTypeId": 1,
        "Score": 2,
        "Tags": "python, tensorflow, service, server, production",
        "Title": "TensorFlow serving vs TensorFlow service",
        "ViewCount": 416,
        "answers": [
            {
                "Body": "<p>I think tensorflow serving is the system that enables us to deploy tf models easily without hustle and bustle (eg. by using saved model we don't need to specify model architecture on production) while tensorflow service is something like Google ML engine.</p>\n\n<p>ps: Don't take my words for it :)</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-12-27T07:03:01.540",
                "Id": 47987798,
                "LastActivityDate": "2017-12-27T07:03:01.540",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5011112,
                "ParentId": 47649297,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>I am new to tensorflow, know something about swig and bazel. I build tensorflow from source, flow the command below:</p>\n\n<pre><code>bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\n</code></pre>\n\n<p>But it seems that tensorflow is too complex to me, The relationship between such as //tensorflow/tools/pip_package/BUILD, //tensorflow/tensorflow.bzl, //tensorflow/python/BUILD, //tensorflow/python/tensorflow.i.</p>\n\n<p>So I want to the procedure of building tensorflow and its framework. What is step 1, step 2... and how the bazel organize the parts. Is there some docs?</p>\n\n<p>Organize the parts, My team add some cc file to //tensorflow/tools/my_tools/, we want to swig these cc files so we can use it when <code>import tensorflow</code> in python. \nwhat should I do exactly?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2018-08-24T03:13:58.903",
        "FavoriteCount": 0,
        "Id": 51996931,
        "LastActivityDate": "2018-08-24T03:13:58.903",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 8578595,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "python, tensorflow, build, swig, bazel",
        "Title": "how bazel build tensorflow and how swig wrap my .cc file to python in tensorflow?",
        "ViewCount": 67,
        "answers": [],
        "source": "stackoverflow"
    }
]
}


the response body is as below:
[
    {
        "Id": 1,
        "dist": 1,
        "prob": 2.3644378185272217
    },
    {
        "Id": 2,
        "dist": 1,
        "prob": 2.131779670715332
    }
]

where each element is representing the post id and relative dist and prob of the dist.


##answer alpha service

[
    {"question":{
    "Title": "what is tensorflow?",
    "Body": "I need to do some regression using deeep learning.",
    "Tags": ["<deep-learning>", "regression"],
    "size": 10
},
"posts":[
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>After building tensorflow, it generates some folders starting with bazel-*. And those folders are only soft links to other folders under /private/var/tmp on my Mac.</p>\n\n<p>Now I want to change some code inside Eigen CXX11 library, and I only find them under bazel-tensorflow/external. My guess is these source files are generated at runtime. So where I can find the original source of Eigen and modify them?</p>\n",
        "CommentCount": 4,
        "CreationDate": "2017-06-09T08:24:58.503",
        "FavoriteCount": 0,
        "Id": 44452849,
        "LastActivityDate": "2017-06-09T08:53:00.583",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 8035809,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "tensorflow, eigen, eigen3",
        "Title": "what is bazel-tensorflow inside tensorflow source folder?",
        "ViewCount": 89,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 44857127,
        "AnswerCount": 1,
        "Body": "<p><a href=\"https://i.stack.imgur.com/YuwKy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/YuwKy.png\" alt=\"String Input Producer contains a fraction of 32 full.\"></a></p>\n\n<p>As can be seen in this picture, my graph has a: \"fraction_of_32_full\" output attached to it. I haven't done this explicitly, and nowhere in my code have I set any limits of a size of 32.</p>\n\n<p>The only data I am explicitly adding to my summary is the cost of each batch, yet when I view my TensorBoard visualisation, I see this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/R3pee.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/R3pee.png\" alt=\"Tensorboard Visualisation\"></a></p>\n\n<p>As you can see, it contains three things. The cost, which I asked for, and two other variables which I havent asked for. The fraction of 25,000 full, and the fraction of 32 full.</p>\n\n<p><strong>My Questions Are:</strong></p>\n\n<ol>\n<li><strong>What are these?</strong></li>\n<li><strong>Why are they added to my summaries without me explicitly asking?</strong></li>\n</ol>\n",
        "CommentCount": 0,
        "CreationDate": "2017-07-01T03:41:44.817",
        "FavoriteCount": 3,
        "Id": 44857126,
        "LastActivityDate": "2017-07-01T03:41:44.817",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 5834938,
        "PostTypeId": 1,
        "Score": 4,
        "Tags": "tensorflow, queue",
        "Title": "What is fraction_of_32_full in TensorFlow",
        "ViewCount": 719,
        "answers": [
            {
                "Body": "<p>I can actually answer my own question here. I did some digging, and found the answers.</p>\n\n<ol>\n<li><strong>What are these?</strong></li>\n</ol>\n\n<p>These are measures of how full your queues are. I have two queues, a string input producer queue which reads my files, and a batch queue which batches my records. Both of the records are in the format: \"fraction of x full\" where x is the capacity of the queue.</p>\n\n<p>The reason the string input producer is fraction of 32, is because if you look at the documentation <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/string_input_producer\" rel=\"noreferrer\">here</a>, you'll see the default capacity is 32.</p>\n\n<ol start=\"2\">\n<li><strong>Why are these added to my summaries without me explicitly asking.</strong></li>\n</ol>\n\n<p>This was a little trickier. If you look at the source code for the input string producer <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/python/training/input.py\" rel=\"noreferrer\">here</a>, you'll see that although the input_string_producer <strong>doesn't</strong> explicitly ask for a summary name, it returns an input_producer, which has a default summary name of: summary_name=\"fraction_of_%d_full\" % capacity. Check line 235 for this. Something similar happens here for the batch queue.</p>\n\n<p>The reason these are being recorded without explicitly asking, is because they were created without explicitly asking, and then the line of code:</p>\n\n<pre><code>merged_summaries = tf.summary.merge_all()\n</code></pre>\n\n<p>merged all these summaries together, so when I called:</p>\n\n<pre><code>sess.run([optimizer, cost, merged_summaries], ..... )\nwriter.add_summary(s, batch)\n</code></pre>\n\n<p>I was actually asking for these to be recorded too.</p>\n\n<p>I hope this answer helped some people.</p>\n",
                "CommentCount": 2,
                "CreationDate": "2017-07-01T03:41:44.817",
                "Id": 44857127,
                "LastActivityDate": "2017-07-01T03:41:44.817",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5834938,
                "ParentId": 44857126,
                "PostTypeId": 2,
                "Score": 8
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 47672101,
        "AnswerCount": 3,
        "Body": "<pre><code>self.center_words = tf.placeholder(tf.int32, shape=[self.batch_size], name='op testing')\nprint(\"Extracting the op\",self.center_words.op)\n</code></pre>\n\n<p>In above I have created a tf placeholder named \"op testing\". And when I print that <strong>self.center_words.op</strong>it prints out kind of a structure like this </p>\n\n<pre><code>op: \"Placeholder\"\nattr {\n  key: \"dtype\"\n  value {\n    type: DT_INT32\n  }\n}\nattr {\n  key: \"shape\"\n  value {\n    shape {\n      dim {\n        size: 128\n      }\n    }\n  }\n}\n</code></pre>\n\n<p>This works for any tensorflow variable ,function output etc. What is this <strong><em>.op</em></strong>?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2017-04-08T05:00:00.367",
        "FavoriteCount": 6,
        "Id": 43290373,
        "LastActivityDate": "2017-12-06T10:31:57.307",
        "LastEditDate": "2017-04-15T22:27:09.403",
        "LastEditorUserId": 2956066,
        "OwnerUserId": 5915270,
        "PostTypeId": 1,
        "Score": 4,
        "Tags": "python, tensorflow, neural-network, deep-learning",
        "Title": "What is tensorflow \"op\" does?",
        "ViewCount": 5218,
        "answers": [
            {
                "Body": "<p>Short answer.</p>\n\n<p><a href=\"https://www.tensorflow.org/versions/r0.10/get_started/basic_usage\" rel=\"noreferrer\">Ops</a>  are say the core of <code>tensorflow</code>.</p>\n\n<blockquote>\n  <p>TensorFlow is a programming system in which you represent computations\n  as graphs. Nodes in the graph are called ops (short for operations).\n  An op takes zero or more Tensors, performs some computation, and\n  produces zero or more Tensors.</p>\n</blockquote>\n\n<p><code>self.center_words.op</code> in your example prints out the features of  <code>self.center_words</code> in that json-like format</p>\n",
                "CommentCount": 1,
                "CreationDate": "2017-04-08T09:15:51.087",
                "Id": 43292256,
                "LastActivityDate": "2017-04-08T09:15:51.087",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 1115377,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 6
            },
            {
                "Body": "<p>Simply put, it prints the property of the particular <em>tensor object</em>. That is, it gives out details about </p>\n\n<ul>\n<li>which operation is responsible for the generation of the tensor </li>\n<li>what is its <code>return type</code>  </li>\n<li>what is its <code>dimension</code></li>\n</ul>\n\n<p>and all possible information about the tensor object in question.</p>\n\n<p>Minimal Example:</p>\n\n<pre><code>In [74]: with tf.Session() as sess:\n    ...:     zer = tf.zeros(shape=(32, 32))\n    ...:     print(zer.op)\n    ...:     \nname: \"zeros_11\"\nop: \"Const\"\nattr {\n  key: \"dtype\"\n  value {\n    type: DT_FLOAT\n  }\n}\nattr {\n  key: \"value\"\n  value {\n    tensor {\n      dtype: DT_FLOAT\n      tensor_shape {\n        dim {\n          size: 32\n        }\n        dim {\n          size: 32\n        }\n      }\n      float_val: 0.0\n    }\n  }\n}\n</code></pre>\n\n<hr>\n\n<p>P.S.: Ignore the number(<code>_11</code>) in (<code>zeros_11</code>)  (that is in the value of the key <code>name</code>). It is just a counter to track the runs. It keeps incrementing on every run within a session.</p>\n\n<hr>\n\n<p>Source Implementation:</p>\n\n<p>Code: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/ops.py#L273\" rel=\"nofollow noreferrer\">tf.Tensor.op</a><br>\nDocs: <a href=\"https://www.tensorflow.org/api_docs/python/tf/Tensor#op\" rel=\"nofollow noreferrer\">tf.Tensor.op</a></p>\n",
                "CommentCount": 3,
                "CreationDate": "2017-04-08T15:51:45.487",
                "Id": 43296161,
                "LastActivityDate": "2017-04-15T23:12:38.967",
                "LastEditDate": "2017-04-15T23:12:38.967",
                "LastEditorUserId": 2956066,
                "OwnerUserId": 2956066,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 3
            },
            {
                "Body": "<p><em>TensorFlow Operations</em>, also known as <em>Ops</em>, are nodes that\nperform computations on or with Tensor objects. After computation, they return zero or\nmore tensors, which can be used by other Ops later in the graph. To create an Operation,\nyou call its constructor in Python, which takes in whatever Tensor parameters needed for\nits calculation, known as inputs, as well as any additional information needed to properly\ncreate the Op, known as <em>attributes</em>. The Python constructor returns a handle to the\nOperation’s output (zero or more Tensor objects), and it is this output which can be passed\non to other Operations or <em>Session.run</em></p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-12-06T10:31:57.307",
                "Id": 47672101,
                "LastActivityDate": "2017-12-06T10:31:57.307",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 9061184,
                "ParentId": 43290373,
                "PostTypeId": 2,
                "Score": 4
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 50990532,
        "AnswerCount": 1,
        "Body": "<p>What is the purpose of parsing flags in TensorFlow? What is tf.flags.FLAGS?\n& what does this code statement do?</p>\n\n<pre><code>FLAGS = tf.flags.FLAGS\nFLAGS._parse_flags()\nprint(\"\\nParameters:\")\nfor attr, value in sorted(FLAGS.__flags.items()):\n    print(\"{}={}\".format(attr.upper(), value))\nprint(\"\")\n</code></pre>\n",
        "CommentCount": 0,
        "CreationDate": "2018-06-22T14:33:03.573",
        "FavoriteCount": 0,
        "Id": 50990239,
        "LastActivityDate": "2018-06-22T14:48:33.797",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 9978843,
        "PostTypeId": 1,
        "Score": 3,
        "Tags": "python, numpy, tensorflow, pycharm",
        "Title": "Python TensorFlow - what is tf.flags.FLAGS?",
        "ViewCount": 375,
        "answers": [
            {
                "Body": "<p>In Tensorflow the flags are basically run parameters for your model. Later in the code you will probably see a tf.app.run() which will utilize these flags. What this code does is grab all the currently existing flags, and print them all out in this format:</p>\n\n<pre><code>Parameters:\nlearning_rate=0.01\nmax_steps=2000\nhidden1=128\nhidden2=32\nbatch_size=100\n</code></pre>\n\n<p>These parameters are just examples that I found online, and will vary from model to model. Hope this helps.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2018-06-22T14:48:33.797",
                "Id": 50990532,
                "LastActivityDate": "2018-06-22T14:48:33.797",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5624170,
                "ParentId": 50990239,
                "PostTypeId": 2,
                "Score": 2
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": 48535662,
        "AnswerCount": 1,
        "Body": "<p>In TensorFlow the first thing I learned to create a variable is</p>\n\n<pre><code>W = tf.Variable(tf.zeros((2,2)), name=\"weights\")\n</code></pre>\n\n<p>But I have a silly question as:</p>\n\n<p>When I name the variable as \"weights\", shouldn't W be its name as well? What's the difference between \"W\" and \"weights\" here?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2018-01-31T04:46:13.980",
        "FavoriteCount": 0,
        "Id": 48534656,
        "LastActivityDate": "2018-01-31T06:18:06.970",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 9292475,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "tensorflow",
        "Title": "What is TensorFlow Variable naming?",
        "ViewCount": 25,
        "answers": [
            {
                "Body": "<p><code>W</code> is a Python variable that contains the reference to the <code>tensorflow Variable</code>. When you are dealing with creating model (in Python) you need to use <code>W</code>.</p>\n\n<p>But, suppose you have a bug in your model. So, you query tensorflow for the model details. Tensorflow prints the output, but with default naming because it does not know what name did you gave to its object in Python, and increases the difficulty in debugging. So, passing <code>name</code> attribute explicitly assigns the specified name to the tensorflow object.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2018-01-31T06:18:06.970",
                "Id": 48535662,
                "LastActivityDate": "2018-01-31T06:18:06.970",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 7102925,
                "ParentId": 48534656,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>I am learning tensorflow and i found a code online in which they used get_variable() in it. What is this function?\nLike this line of code:</p>\n\n<pre><code>W1 = tf.get_variable(\"W1\", [25, 122], initializer = \n                    tf.contrib.layers.xavier_initializer())\n</code></pre>\n\n<p>And also what this initializer is doing in it?</p>\n",
        "CommentCount": 3,
        "CreationDate": "2018-04-16T20:31:40.680",
        "FavoriteCount": 0,
        "Id": 49865761,
        "LastActivityDate": "2018-04-17T07:52:49.820",
        "LastEditDate": "2018-04-17T07:52:49.820",
        "LastEditorUserId": 9355802,
        "OwnerUserId": 9355802,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "python, tensorflow, machine-learning, neural-network, deep-learning",
        "Title": "What is get_variable in tensorflow?",
        "ViewCount": 104,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 4,
        "Body": "<p>What is an epoch in TensorFlow and what is it used for?</p>\n\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/754048a0453a04a761e112ae5d99c149eb9910dd/tensorflow/contrib/learn/python/learn/datasets/mnist.py#L173\" rel=\"noreferrer\">https://github.com/tensorflow/tensorflow/blob/754048a0453a04a761e112ae5d99c149eb9910dd/tensorflow/contrib/learn/python/learn/datasets/mnist.py#L173</a></p>\n",
        "CommentCount": 0,
        "CreationDate": "2016-10-16T11:02:26.290",
        "FavoriteCount": 1,
        "Id": 40069524,
        "LastActivityDate": "2017-09-29T14:18:20.427",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 5016411,
        "PostTypeId": 1,
        "Score": 10,
        "Tags": "tensorflow",
        "Title": "What is an epoch in TensorFlow?",
        "ViewCount": 6744,
        "answers": [
            {
                "Body": "<p>An epoch, in Machine Learning, is the entire processing by the learning algorithm of the entire train-set.</p>\n\n<p>The MNIST train set is composed by 55000 samples.\nOnce the algorithm processed all those 55000 samples an epoch is passed.</p>\n",
                "CommentCount": 0,
                "CreationDate": "2016-10-16T11:17:46.800",
                "Id": 40069646,
                "LastActivityDate": "2016-10-16T11:17:46.800",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 2891324,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 18
            },
            {
                "Body": "<p>An epoch is a full iteration over samples. The number of epochs is how many times the algorithm is going to run. The number of epochs affects directly (or not) the result of the training step (with just a few epochs you can reach only a local minimum, but with more epochs, you can reach a global minimum or at least a better local minimum).</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-04-11T01:24:52.847",
                "Id": 43335283,
                "LastActivityDate": "2017-04-11T01:24:52.847",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 2768539,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 4
            },
            {
                "Body": "<p>An epoch is one training iteration, so in one iteration all samples are iterated once. When calling tensorflows train-function and define the value for the parameter epochs, you determine how many times your model should be trained on your sample data (usually at least some hundred times).</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-09-29T14:18:20.427",
                "Id": 46490784,
                "LastActivityDate": "2017-09-29T14:18:20.427",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 8695372,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 0
            },
            {
                "Body": "<p>Epoch is not something intrinsic to the TensorFlow framework. It has been used for a long time in the field of Machine Learning.</p>\n\n<p>One epoch is the time step that is incremented every time it has went through all the samples in the training set.</p>\n",
                "CommentCount": 1,
                "CreationDate": "2017-04-11T00:14:54.580",
                "Id": 43334773,
                "LastActivityDate": "2017-04-11T00:14:54.580",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5888016,
                "ParentId": 40069524,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>What does @@ mean in Tensorflow source code? For example, in this link\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.6/tensorflow/python/ops/array_ops.py#L19\" rel=\"nofollow noreferrer\">https://github.com/tensorflow/tensorflow/blob/r1.6/tensorflow/python/ops/array_ops.py#L19</a>  </p>\n\n<p>What follows the @@ symbols seems to be some function names. What is the purpose of including such section in the beginning of the source code? </p>\n\n<p>Besides, in this page, it says the </p>\n\n<blockquote>\n  <p>tf.placeholder_with_default</p>\n</blockquote>\n\n<p>is defined in </p>\n\n<blockquote>\n  <p>tensorflow/python/ops/gen_array_ops.py</p>\n</blockquote>\n\n<p>But I cannot find the respected python files in the github repository. Where can I find the source code for this function?<br>\n<a href=\"https://github.com/tensorflow/tensorflow/tree/r1.6/tensorflow/python/ops\" rel=\"nofollow noreferrer\">https://github.com/tensorflow/tensorflow/tree/r1.6/tensorflow/python/ops</a></p>\n",
        "CommentCount": 3,
        "CreationDate": "2018-03-07T11:49:19.053",
        "FavoriteCount": 0,
        "Id": 49151225,
        "LastActivityDate": "2018-03-07T11:49:19.053",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 7349742,
        "PostTypeId": 1,
        "Score": 1,
        "Tags": "python, tensorflow",
        "Title": "What does @@ means in the Tensorflow source code?",
        "ViewCount": 41,
        "answers": [],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 1,
        "Body": "<p>I have a question regarding the difference between <code>TensorFlow Serving</code> versus <code>TensorFlow service</code>. (Sorry that I'm not familiar with this at all.)</p>\n\n<p>I found TensorFlow serving's definition, which is \"TensorFlow Serving is a flexible, high-performance serving system for machine learning models, designed for production environments.\"(<a href=\"https://www.tensorflow.org/serving/\" rel=\"nofollow noreferrer\">https://www.tensorflow.org/serving/</a>)\nWhile I'm wondering what TensorFlow service is? Such as in this sentences:</p>\n\n<p>\"TensorFlow models can be deployed to production services like <strong>TensorFlow service</strong>, and mobile devices.\"</p>\n\n<p>And what are the production services?\nI guess the TensorFlow service refers to some service that helps manage TensorFlow, rather than TensorFlow Serving which is a system to deploy the TensorFlow model. Is that correct?\nI'm confused about what the TensorFlow service is, can you share some light on it?</p>\n\n<p>Thank you so much in advance!</p>\n",
        "CommentCount": 1,
        "CreationDate": "2017-12-05T08:40:57.457",
        "FavoriteCount": 0,
        "Id": 47649297,
        "LastActivityDate": "2017-12-27T07:03:01.540",
        "LastEditDate": "2017-12-05T13:00:30.053",
        "LastEditorUserId": 5166249,
        "OwnerUserId": 5166249,
        "PostTypeId": 1,
        "Score": 2,
        "Tags": "python, tensorflow, service, server, production",
        "Title": "TensorFlow serving vs TensorFlow service",
        "ViewCount": 416,
        "answers": [
            {
                "Body": "<p>I think tensorflow serving is the system that enables us to deploy tf models easily without hustle and bustle (eg. by using saved model we don't need to specify model architecture on production) while tensorflow service is something like Google ML engine.</p>\n\n<p>ps: Don't take my words for it :)</p>\n",
                "CommentCount": 0,
                "CreationDate": "2017-12-27T07:03:01.540",
                "Id": 47987798,
                "LastActivityDate": "2017-12-27T07:03:01.540",
                "LastEditDate": null,
                "LastEditorUserId": null,
                "OwnerUserId": 5011112,
                "ParentId": 47649297,
                "PostTypeId": 2,
                "Score": 0
            }
        ],
        "source": "stackoverflow"
    },
    {
        "AcceptedAnswerId": null,
        "AnswerCount": 0,
        "Body": "<p>I am new to tensorflow, know something about swig and bazel. I build tensorflow from source, flow the command below:</p>\n\n<pre><code>bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\n</code></pre>\n\n<p>But it seems that tensorflow is too complex to me, The relationship between such as //tensorflow/tools/pip_package/BUILD, //tensorflow/tensorflow.bzl, //tensorflow/python/BUILD, //tensorflow/python/tensorflow.i.</p>\n\n<p>So I want to the procedure of building tensorflow and its framework. What is step 1, step 2... and how the bazel organize the parts. Is there some docs?</p>\n\n<p>Organize the parts, My team add some cc file to //tensorflow/tools/my_tools/, we want to swig these cc files so we can use it when <code>import tensorflow</code> in python. \nwhat should I do exactly?</p>\n",
        "CommentCount": 0,
        "CreationDate": "2018-08-24T03:13:58.903",
        "FavoriteCount": 0,
        "Id": 51996931,
        "LastActivityDate": "2018-08-24T03:13:58.903",
        "LastEditDate": null,
        "LastEditorUserId": null,
        "OwnerUserId": 8578595,
        "PostTypeId": 1,
        "Score": 0,
        "Tags": "python, tensorflow, build, swig, bazel",
        "Title": "how bazel build tensorflow and how swig wrap my .cc file to python in tensorflow?",
        "ViewCount": 67,
        "answers": [],
        "source": "stackoverflow"
    }
]
}

]